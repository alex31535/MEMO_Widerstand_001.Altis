//-----------------------------------------------------------------------------------------------------------------
//#include "the_base\a_description_load.sqf"
//-----------------------------------------------------------------------------------------------------------------
class Header {
	gameType = SANDBOX;
	minPlayers = 1;
	maxPlayers = 16;
};
//-----------------------------------------------------------------------------------------------------------------
respawn = "BASE";
respawnDelay = 1;
respawnDialog = 0; // 0;1 ; Show the scoreboard and respawn countdown timer for a player if he is killed with respawnType 3. Default is 1 (true).
respawnOnStart = 0;						//..........
respawnButton = 0; // 0, 1  Enable or disable the respawn button in the menu for INSTANT and BASE respawn types. Default is 1 (enabled).
respawnTemplates[] = {"Instant"};				// "Revive" , "MenuPosition" ,"MenuInventory", "Instant"
//respawnTemplatesWest[] = {"Instant"}; //"MenuPosition" "Revive" "Instant"
//respawnTemplatesEast[] = {"Instant"};
//respawnTemplatesGuer[] = {"Instant"};
//respawnTemplatesCiv[] = {"Instant"};
//respawnTemplatesVirtual[] = {"Instant"}; // Virtual players, used mainly in Curator missions
//-----------------------------------------------------------------------------------------------------------------
ReviveMode = 1;                         //0: disabled, 1: enabled, 2: controlled by player attributes
ReviveUnconsciousStateMode = 0;         //0: basic, 1: advanced, 2: realistic
ReviveRequiredTrait = 0;                //0: none, 1: medic trait is required
ReviveRequiredItems = 2;                //0: none, 1: medkit, 2: medkit or first aid kit
ReviveRequiredItemsFakConsumed = 1;     //0: first aid kit is not consumed upon revive, 1: first aid kit is consumed
ReviveDelay = 10;                        //time needed to revive someone (in secs)
ReviveMedicSpeedMultiplier = 2;         //speed multiplier for revive performed by medic
ReviveForceRespawnDelay = 10;            //time needed to perform force respawn (in secs)
ReviveBleedOutDelay = 300;              //unconscious state duration (in secs)
//-----------------------------------------------------------------------------------------------------------------
showMap = 1; //1 // Defines if the map is shown after the mission starts.
briefing = 0;

skipLobby = 1; //enabled....When enabled, joining player will join the mission bypassing role selection screen.
			         // The joinUnassigned param will be set to 1 automatically, so that player receives 1st available
			         // role from mission template. When leaving such mission, player will go straight back to server browser.
joinUnassigned = 1;
allowFunctionsLog = 1;
enableDebugConsole = 1; // 0 = Default behavior, available only in editor , 1 = Available in SP and for hosts / logged in admins , 2 = Available for everyone
disableChannels[]={0,1,2,3,4,6};
enableItemsDropping = 0;
enableTeamSwitch = 0; //Manual team switch disabled; Enables or disables Team Switch functionality in MP when respawn type is 5 (SIDE). Default is 1.
disabledai = 1; // When 1, removes all playable units which do not have a human player. When 0, a logging out player will have AI take control of his character. Default value is 0. (MP)
showGPS = 0; // In ArmA 1.04 toggle this option to disable the mini map attached to the GPS.
disableRandomization[] = {"All"};
showGroupIndicator = 0; //  	When set to 1, changes default GPS mini map into a radar like display that indicates group members relative position to the player
allowFunctionsRecompile = 1; 	//  	As a security measure, functions are by default predected against rewriting during the mission.
															//This restriction does not apply in missions previewed from the editor and in missions with the following attribute in Description.ext
showSquadRadar = 0; //Defines if the Squad Radar is visible.
aiKills = 0; //Enables scorelist for AI players
//-----------------------------------------------------------------------------------------------------------------
corpseManagerMode = 3; // 0 = None - None of the units are managed by the manager
					// 1 = All - All units are managed by the manager
					// 2 = None_But_Respawned - Only units that can respawn are managed by the manager
					// 3 = All_But_Respawned - All units are managed by the manager with exception of respawned (opposite to mode 2)
corpseLimit = 50;
corpseRemovalMinTime = 120;
corpseRemovalMaxTime = 240;
wreckManagerMode = 3; // 0 = None - None of the units are managed by the manager
					// 1 = All - All units are managed by the manager
					// 2 = None_But_Respawned - Only units that can respawn are managed by the manager
					// 3 = All_But_Respawned - All units are managed by the manager with exception of respawned (opposite to mode 2)
wreckLimit = 10;
wreckRemovalMinTime = 120;
wreckRemovalMaxTime = 240;
//-----------------------------------------------------------------------------------------------------------------
class CfgDifficultyPresets {};
//-----------------------------------------------------------------------------------------------------------------
class CfgRespawnInventory {};
//-----------------------------------------------------------------------------------------------------------------
class CfgDebriefing {};
//-----------------------------------------------------------------------------------------------------------------
class CfgRoles {};
//-----------------------------------------------------------------------------------------------------------------
class CfgUnitInsignia {
	//#include "alex_mil\CfgUnitInsignia.hpp"
};
//-----------------------------------------------------------------------------------------------------------------
class CfgRemoteExec {
	class Commands {
				// MODUS
				//0: remote execution is blocked
				//1: only whitelisted functions/commands are allowed for remote execution
				//2: remote execution fully opened
		mode = 2;
				//
				//   #targets:
				//	0: can target all machines (default)
				//	1: can target only clients, execution on server is denied
				//	2: can target only server, execution on clients is denied
				//	BSP: 	{player setAmmo [primaryWeapon player, 1];} remoteExec ["bis_fnc_call", 0]; 		-> player setAmmo [handgunWeapon player, 10];
				// #nur server
//	class xxxxxxxxx {allowedTargets = 2;};
		class addEventHandler {allowedTargets = 0;};
		class addScore {allowedTargets = 0;};
		class addItem {allowedTargets = 0;};
		class allowdammage {allowedTargets = 0;};
		class cutText {allowedTargets = 0;};
		class createMarker {allowedTargets = 0;};
		class createVehicle {allowedTargets = 0;};
		class execfsm {allowedTargets = 0;};
		class execVM {allowedTargets = 0;};
		class forceAddUniform {allowedTargets = 0;};
		class globalchat {allowedTargets = 0;};
		class getvariable {allowedTargets = 0;};
		class linkItem {allowedTargets = 0;};
		class lock {allowedTargets = 0;};
		class publicVariableClient {allowedTargets = 0;};
		class publicvariable {allowedTargets = 0;};
		class removeAllWeapons {allowedTargets = 0;};
		class removeAllAssignedItems {allowedTargets = 0;};
		class removeAllItems {allowedTargets = 0;};
		class removeUniform {allowedTargets = 0;};
		class removeVest {allowedTargets = 0;};
		class removeBackpack {allowedTargets = 0;};
		class removeHeadgear {allowedTargets = 0;};
		class removeGoggles {allowedTargets = 0;};
		class removeItem {allowedTargets = 0;};
		class reveal {allowedTargets = 0;};
		class setFog {allowedTargets = 0;};
		class setFuel {allowedTargets = 0;};
		class setFuelCargo {allowedTargets = 0;};
		class setHitPointDamage {allowedTargets = 0;};
		class setvariable {allowedTargets = 0;};
		class unassignItem {allowedTargets = 0;};
		class setcaptive {allowedTargets = 0;};
		//# jip-verbot
		class hint {jip = 0;};	//		(=0) jip is not allowed for this command
	};
	class Functions {
				// # MODUS
				 //		0: remote execution is blocked
				 //		1: only whitelisted functions/commands are allowed for remote execution
 				//		2: remote execution fully opened
		mode = 2;
		jip = 0;                                      				 //no functions can use jip
		// #nur server
		class bis_fnc_call {allowedTargets = 2;};   	//execute only on clients, server execution denied
		// #nur clients
		class BIS_fnc_setRank {allowedTargets = 1;};
	};
};
//-----------------------------------------------------------------------------------------------------------------
#include "cfgsounds.hpp"
//-----------------------------------------------------------------------------------------------------------------
// # GUI
#include "defines.hpp"
#include "class_lb_auswahl_1.hpp"
#include "class_lb_mission_score.hpp"
#include "class_text_ja_nein.hpp"
#include "class_lb_verwaltung.hpp"
#include "class_lb_missionsparameter.hpp"
#include "class_angst_beitritt.hpp"
